name: Android App Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install app dependencies
      run: |
        npm ci

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install test dependencies
      run: |
        pip install Appium-Python-Client

    - name: Install Appium driver
      run: |
        npx appium driver install uiautomator2

    - name: Install Cordova
      run: |
        npm install -g cordova

    - name: Add Android platform to Cordova
      run: |
        cordova platform add android

    - name: Build Cordova app
      run: |
        cordova build android

    - name: Run Android Emulator
      run: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-27;google_apis;x86' --force
        echo $ANDROID_HOME/emulator/emulator -list-avds
        echo "Starting emulator"
        nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        $ANDROID_HOME/platform-tools/adb devices
        echo "Emulator started"
    
    - name: Install apk
      run: |
        adb install platforms/android/app/build/outputs/apk/debug/app-debug.apk

    - name: Start Appium server
      run: |
        npx appium &
        sleep 30

    - name: Run tests
      run: |
        export API_KEY=${{ secrets.API_KEY }}
        python src/tests/test.py
