name: Android App Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install app dependencies
      run: |
        npm ci

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install test dependencies
      run: |
        pip install Appium-Python-Client

    - name: Install Appium driver
      run: |
        npx appium driver install uiautomator2

    - name: Start Appium server
      run: |
        npx appium &
        sleep 30

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Build Framework7 app
      run: |
        npm run build

    - name: Install Cordova
      run: |
        npm install -g cordova

    - name: Cache Cordova platforms
      uses: actions/cache@v2
      with:
        path: platforms
        key: ${{ runner.os }}-cordova-platforms-${{ hashFiles('**/config.xml') }}
        restore-keys: |
          ${{ runner.os }}-cordova-platforms-

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Add Android platform to Cordova
      run: |
        cordova platform add android

    - name: Build Cordova app
      run: |
        cordova build android

    - name: Set up emulator, install apk and run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: |
          echo "Emulator has started"
          adb install platforms/android/app/build/outputs/apk/debug/app-debug.apk
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
          python src/tests/test.py
      env:
        API_KEY: ${{ secrets.API_KEY }}

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots
        path: '*.png'

    - name: Upload screen recording
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screen_recording
        path: 'screen_recording.mp4'
